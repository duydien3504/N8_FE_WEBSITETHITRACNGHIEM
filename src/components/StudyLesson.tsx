import React, { useState } from 'react';
import { ImageWithFallback } from './figma/ImageWithFallback';

interface StudyLessonProps {
  course: any;
  onBackToCourse: () => void;
}

export const StudyLesson: React.FC<StudyLessonProps> = ({ course, onBackToCourse }) => {
  const [currentLesson, setCurrentLesson] = useState(0);
  const [activeTab, setActiveTab] = useState('video');
  const [sidebarOpen, setSidebarOpen] = useState(true);

  const lessons = [
    {
      id: 1,
      title: 'Gi·ªõi thi·ªáu kh√≥a h·ªçc',
      type: 'video',
      duration: '15:30',
      videoUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
      transcript: `
Xin ch√†o v√† ch√†o m·ª´ng c√°c b·∫°n ƒë·∫øn v·ªõi kh√≥a h·ªçc ${course?.title}. 
Trong b√†i h·ªçc ƒë·∫ßu ti√™n n√†y, ch√∫ng ta s·∫Ω t√¨m hi·ªÉu t·ªïng quan v·ªÅ kh√≥a h·ªçc...
      `,
      materials: [
        { name: 'Slide b√†i gi·∫£ng', type: 'pdf', size: '2.5 MB' },
        { name: 'Source code', type: 'zip', size: '1.2 MB' }
      ],
      completed: false
    },
    {
      id: 2,
      title: 'C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng ph√°t tri·ªÉn',
      type: 'video',
      duration: '25:45',
      videoUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
      transcript: `
Trong b√†i h·ªçc n√†y, ch√∫ng ta s·∫Ω h·ªçc c√°ch c√†i ƒë·∫∑t v√† c·∫•u h√¨nh m√¥i tr∆∞·ªùng ph√°t tri·ªÉn...
      `,
      materials: [
        { name: 'H∆∞·ªõng d·∫´n c√†i ƒë·∫∑t', type: 'pdf', size: '3.1 MB' },
        { name: 'Tool list', type: 'txt', size: '1 KB' }
      ],
      completed: false
    },
    {
      id: 3,
      title: 'T√†i li·ªáu tham kh·∫£o',
      type: 'document',
      content: `
# T√†i li·ªáu tham kh·∫£o

## 1. Gi·ªõi thi·ªáu

ƒê√¢y l√† t√†i li·ªáu tham kh·∫£o chi ti·∫øt cho kh√≥a h·ªçc ${course?.title}.

## 2. Ki·∫øn th·ª©c c∆° b·∫£n

### 2.1 Kh√°i ni·ªám c∆° b·∫£n
- ƒê·ªãnh nghƒ©a A
- ƒê·ªãnh nghƒ©a B
- ƒê·ªãnh nghƒ©a C

### 2.2 Nguy√™n t·∫Øc quan tr·ªçng
1. Nguy√™n t·∫Øc th·ª© nh·∫•t
2. Nguy√™n t·∫Øc th·ª© hai
3. Nguy√™n t·∫Øc th·ª© ba

## 3. Th·ª±c h√†nh

### 3.1 B√†i t·∫≠p c∆° b·∫£n
- B√†i t·∫≠p 1: L√†m quen v·ªõi giao di·ªán
- B√†i t·∫≠p 2: Th·ª±c hi·ªán t√°c v·ª• ƒë∆°n gi·∫£n
- B√†i t·∫≠p 3: T√≠ch h·ª£p v·ªõi h·ªá th·ªëng

### 3.2 D·ª± √°n th·ª±c t·∫ø
√Åp d·ª•ng ki·∫øn th·ª©c ƒë√£ h·ªçc v√†o d·ª± √°n th·ª±c t·∫ø...

## 4. T√†i nguy√™n b·ªï sung

- Link 1: [T√†i li·ªáu ch√≠nh th·ª©c](https://example.com)
- Link 2: [Best practices](https://example.com)
- Link 3: [Community forum](https://example.com)
      `,
      materials: [
        { name: 'T√†i li·ªáu PDF ƒë·∫ßy ƒë·ªß', type: 'pdf', size: '5.2 MB' },
        { name: 'Checklist', type: 'doc', size: '500 KB' }
      ],
      completed: false
    }
  ];

  const currentLessonData = lessons[currentLesson];

  const handleLessonComplete = () => {
    lessons[currentLesson].completed = true;
    if (currentLesson < lessons.length - 1) {
      setCurrentLesson(currentLesson + 1);
    }
  };

  const formatDuration = (duration: string) => {
    return duration || '0:00';
  };

  const getProgress = () => {
    const completed = lessons.filter(lesson => lesson.completed).length;
    return Math.round((completed / lessons.length) * 100);
  };

  return (
    <div className="vh-100 d-flex flex-column" style={{ backgroundColor: '#000' }}>
      {/* Header */}
      <div className="bg-dark text-white p-3 d-flex align-items-center justify-content-between">
        <div className="d-flex align-items-center">
          <button 
            className="btn btn-dark me-3"
            onClick={onBackToCourse}
          >
            ‚Üê Quay l·∫°i kh√≥a h·ªçc
          </button>
          <h5 className="mb-0">{course?.title}</h5>
        </div>
        
        <div className="d-flex align-items-center">
          <span className="me-3">Ti·∫øn ƒë·ªô: {getProgress()}%</span>
          <div className="progress me-3" style={{ width: '120px', height: '8px' }}>
            <div 
              className="progress-bar bg-success" 
              style={{ width: `${getProgress()}%` }}
            ></div>
          </div>
          <button 
            className="btn btn-dark"
            onClick={() => setSidebarOpen(!sidebarOpen)}
          >
            ‚ò∞
          </button>
        </div>
      </div>

      <div className="flex-grow-1 d-flex">
        {/* Main Content */}
        <div className={`flex-grow-1 d-flex flex-column ${sidebarOpen ? '' : 'w-100'}`}>
          {/* Video/Content Area */}
          <div className="flex-grow-1 position-relative">
            {currentLessonData.type === 'video' ? (
              <iframe
                src={currentLessonData.videoUrl}
                className="w-100 h-100 border-0"
                allowFullScreen
                title={currentLessonData.title}
              />
            ) : (
              <div className="h-100 bg-white p-4 overflow-auto">
                <div className="container">
                  <div className="row justify-content-center">
                    <div className="col-lg-8">
                      <div 
                        dangerouslySetInnerHTML={{ 
                          __html: currentLessonData.content?.replace(/\n/g, '<br/>') || '' 
                        }}
                        style={{ 
                          whiteSpace: 'pre-wrap',
                          lineHeight: '1.6',
                          fontSize: '16px'
                        }}
                      />
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* Bottom Controls */}
          <div className="bg-dark text-white p-3">
            <div className="d-flex align-items-center justify-content-between">
              <div>
                <h6 className="mb-1">{currentLessonData.title}</h6>
                <small className="text-muted">
                  {currentLessonData.type === 'video' 
                    ? `Video ‚Ä¢ ${formatDuration(currentLessonData.duration)}`
                    : 'T√†i li·ªáu h·ªçc t·∫≠p'
                  }
                </small>
              </div>
              
              <div className="d-flex gap-2">
                <button 
                  className="btn btn-outline-light btn-sm"
                  disabled={currentLesson === 0}
                  onClick={() => setCurrentLesson(currentLesson - 1)}
                >
                  ‚Üê B√†i tr∆∞·ªõc
                </button>
                
                <button 
                  className="btn btn-success btn-sm"
                  onClick={handleLessonComplete}
                >
                  {currentLessonData.completed ? '‚úì ƒê√£ ho√†n th√†nh' : 'Ho√†n th√†nh b√†i h·ªçc'}
                </button>
                
                <button 
                  className="btn btn-outline-light btn-sm"
                  disabled={currentLesson === lessons.length - 1}
                  onClick={() => setCurrentLesson(currentLesson + 1)}
                >
                  B√†i ti·∫øp theo ‚Üí
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Sidebar */}
        {sidebarOpen && (
          <div className="bg-white border-start" style={{ width: '400px', minWidth: '400px' }}>
            {/* Tabs */}
            <div className="border-bottom">
              <ul className="nav nav-tabs border-0" style={{ paddingLeft: '16px', paddingRight: '16px' }}>
                <li className="nav-item">
                  <button 
                    className={`nav-link ${activeTab === 'playlist' ? 'active' : ''} border-0`}
                    onClick={() => setActiveTab('playlist')}
                  >
                    Danh s√°ch b√†i h·ªçc
                  </button>
                </li>
                <li className="nav-item">
                  <button 
                    className={`nav-link ${activeTab === 'notes' ? 'active' : ''} border-0`}
                    onClick={() => setActiveTab('notes')}
                  >
                    Ghi ch√∫
                  </button>
                </li>
                <li className="nav-item">
                  <button 
                    className={`nav-link ${activeTab === 'materials' ? 'active' : ''} border-0`}
                    onClick={() => setActiveTab('materials')}
                  >
                    T√†i li·ªáu
                  </button>
                </li>
              </ul>
            </div>

            <div className="p-3 h-100 overflow-auto">
              {/* Playlist Tab */}
              {activeTab === 'playlist' && (
                <div>
                  {lessons.map((lesson, index) => (
                    <div 
                      key={lesson.id}
                      className={`p-3 border rounded mb-2 cursor-pointer ${
                        index === currentLesson ? 'bg-primary text-white' : 'bg-light'
                      }`}
                      onClick={() => setCurrentLesson(index)}
                      style={{ cursor: 'pointer' }}
                    >
                      <div className="d-flex align-items-center">
                        <div className="me-2">
                          {lesson.completed ? '‚úÖ' : (lesson.type === 'video' ? '‚ñ∂Ô∏è' : 'üìÑ')}
                        </div>
                        <div className="flex-grow-1">
                          <div className="fw-medium">{lesson.title}</div>
                          <small className={index === currentLesson ? 'text-white-50' : 'text-muted'}>
                            {lesson.type === 'video' 
                              ? formatDuration(lesson.duration)
                              : 'T√†i li·ªáu'
                            }
                          </small>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}

              {/* Notes Tab */}
              {activeTab === 'notes' && (
                <div>
                  <h6 className="mb-3">Ghi ch√∫ c·ªßa b·∫°n</h6>
                  <textarea 
                    className="form-control mb-3" 
                    rows={10}
                    placeholder="Vi·∫øt ghi ch√∫ cho b√†i h·ªçc n√†y..."
                  />
                  <button className="btn btn-primary btn-sm w-100">
                    L∆∞u ghi ch√∫
                  </button>
                  
                  <div className="mt-4">
                    <h6 className="mb-3">Transcript</h6>
                    {currentLessonData.transcript && (
                      <div className="p-3 bg-light rounded">
                        <small>{currentLessonData.transcript}</small>
                      </div>
                    )}
                  </div>
                </div>
              )}

              {/* Materials Tab */}
              {activeTab === 'materials' && (
                <div>
                  <h6 className="mb-3">T√†i li·ªáu b√†i h·ªçc</h6>
                  {currentLessonData.materials?.map((material, index) => (
                    <div key={index} className="d-flex align-items-center p-3 border rounded mb-2">
                      <div className="me-3">
                        {material.type === 'pdf' ? 'üìÑ' : 
                         material.type === 'zip' ? 'üì¶' : 
                         material.type === 'doc' ? 'üìù' : 'üìé'}
                      </div>
                      <div className="flex-grow-1">
                        <div className="fw-medium">{material.name}</div>
                        <small className="text-muted">{material.size}</small>
                      </div>
                      <button className="btn btn-outline-primary btn-sm">
                        T·∫£i v·ªÅ
                      </button>
                    </div>
                  ))}
                  
                  <div className="mt-4">
                    <h6 className="mb-3">Li√™n k·∫øt h·ªØu √≠ch</h6>
                    <div className="list-group list-group-flush">
                      <a href="#" className="list-group-item list-group-item-action">
                        üìö T√†i li·ªáu tham kh·∫£o ch√≠nh th·ª©c
                      </a>
                      <a href="#" className="list-group-item list-group-item-action">
                        üéØ B√†i t·∫≠p th·ª±c h√†nh
                      </a>
                      <a href="#" className="list-group-item list-group-item-action">
                        üí¨ Di·ªÖn ƒë√†n th·∫£o lu·∫≠n
                      </a>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};